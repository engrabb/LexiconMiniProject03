// <auto-generated />
using System;
using LexiconMiniProject03;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LexiconMiniProject03.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241206111609_FixSeedData")]
    partial class FixSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LexiconMiniProject03.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Assets", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LexiconMiniProject03.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyCode = "USD",
                            Name = "New York"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyCode = "GBP",
                            Name = "London"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyCode = "EUR",
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 4,
                            CurrencyCode = "USD",
                            Name = "San Diego"
                        });
                });

            modelBuilder.Entity("LexiconMiniProject03.Computer", b =>
                {
                    b.HasBaseType("LexiconMiniProject03.Asset");

                    b.ToTable("Computers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Model = "Dell",
                            OfficeId = 1,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Model = "Samsung",
                            OfficeId = 2,
                            PriceUSD = 800m,
                            PurchaseDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Model = "Samsung",
                            OfficeId = 2,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Model = "Dell",
                            OfficeId = 1,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Model = "MacBook",
                            OfficeId = 3,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Model = "MacBook",
                            OfficeId = 3,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2021, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LexiconMiniProject03.Phone", b =>
                {
                    b.HasBaseType("LexiconMiniProject03.Asset");

                    b.ToTable("Phones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Model = "Iphone",
                            OfficeId = 1,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Model = "Iphone",
                            OfficeId = 1,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Model = "Huawei",
                            OfficeId = 2,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Model = "Huawei",
                            OfficeId = 2,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Model = "Nokia",
                            OfficeId = 3,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Model = "Nokia",
                            OfficeId = 3,
                            PriceUSD = 1500m,
                            PurchaseDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LexiconMiniProject03.Asset", b =>
                {
                    b.HasOne("LexiconMiniProject03.Office", "OfficeLocation")
                        .WithMany("Assets")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfficeLocation");
                });

            modelBuilder.Entity("LexiconMiniProject03.Computer", b =>
                {
                    b.HasOne("LexiconMiniProject03.Asset", null)
                        .WithOne()
                        .HasForeignKey("LexiconMiniProject03.Computer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LexiconMiniProject03.Phone", b =>
                {
                    b.HasOne("LexiconMiniProject03.Asset", null)
                        .WithOne()
                        .HasForeignKey("LexiconMiniProject03.Phone", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LexiconMiniProject03.Office", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
